{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport GoalInput from \"./GoalInput\";\nimport GoalList from \"./GoalList\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      goallist = _useState2[0],\n      setgoallist = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddMode = _useState4[0],\n      setisAddMode = _useState4[1];\n\n  var handlesubmit = function handlesubmit(coursegoal) {\n    setgoallist(function (currentgoals) {\n      return [].concat(_toConsumableArray(currentgoals), [{\n        id: Math.random().toString(),\n        value: coursegoal\n      }]);\n    });\n  };\n\n  var removehandler = function removehandler(goalId) {\n    setgoallist(function (currentgoals) {\n      return currentgoals.filter(function (singlegoal) {\n        return singlegoal.id !== goalId;\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      padding: 50\n    }\n  }, React.createElement(Button, {\n    title: \"Add New Title\",\n    onPress: function onPress() {\n      setisAddMode(true);\n    }\n  }), React.createElement(GoalInput, {\n    handlesubmit: handlesubmit\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    data: goallist,\n    renderItem: function renderItem(itemdata) {\n      return React.createElement(GoalList, {\n        id: itemdata.item.id,\n        ondelete: function ondelete(id) {\n          removehandler(id);\n        },\n        title: itemdata.item.value\n      });\n    }\n  }));\n}","map":{"version":3,"sources":["/home/developer/todo/App.js"],"names":["React","useState","GoalInput","GoalList","App","goallist","setgoallist","isAddMode","setisAddMode","handlesubmit","coursegoal","currentgoals","id","Math","random","toString","value","removehandler","goalId","filter","singlegoal","padding","item","index","itemdata"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACF,mBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACE,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAgB;AAEnCJ,IAAAA,WAAW,CAAC,UAACK,YAAD;AAAA,0CACPA,YADO,IAEV;AAAEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAN;AAAgCC,QAAAA,KAAK,EAAEN;AAAvC,OAFU;AAAA,KAAD,CAAX;AAID,GAND;;AAOA,MAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AAChCZ,IAAAA,WAAW,CAAC,UAACK,YAAD,EAAkB;AAC7B,aAAOA,YAAY,CAACQ,MAAb,CAAoB,UAACC,UAAD;AAAA,eACxBA,UAAU,CAACR,EAAX,KAAkBM,MADM;AAAA,OAApB,CAAP;AAGA,KAJU,CAAX;AAKD,GAND;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX;AAAb,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,eAAd;AAA8B,IAAA,OAAO,EAAE,mBAAI;AAACb,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAmB;AAA/D,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEC;AAAzB,IAFF,EAGE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAE,sBAACa,IAAD,EAAOC,KAAP;AAAA,aAAiBD,IAAI,CAACV,EAAtB;AAAA,KADhB;AAEE,IAAA,IAAI,EAAEP,QAFR;AAGE,IAAA,UAAU,EAAE,oBAACmB,QAAD;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,EAAE,EAAEA,QAAQ,CAACF,IAAT,CAAcV,EADpB;AAEE,QAAA,QAAQ,EAAE,kBAACA,EAAD,EAAQ;AAChBK,UAAAA,aAAa,CAACL,EAAD,CAAb;AACD,SAJH;AAKE,QAAA,KAAK,EAAEY,QAAQ,CAACF,IAAT,CAAcN;AALvB,QADU;AAAA;AAHd,IAHF,CADF;AAmBD","sourcesContent":["import React, { useState } from \"react\";\nimport { View, FlatList, Button } from \"react-native\";\nimport GoalInput from \"./GoalInput\";\nimport GoalList from \"./GoalList\";\n\nexport default function App() {\n  const [goallist, setgoallist] = useState([]);\nconst [isAddMode, setisAddMode] = useState(false)\n  const handlesubmit = (coursegoal) => {\n    // console.log(coursegoal);\n    setgoallist((currentgoals) => [\n      ...currentgoals,\n      { id: Math.random().toString(), value: coursegoal },\n    ]);\n  };\n  const removehandler = (goalId) => {\n    setgoallist((currentgoals) => {\n     return currentgoals.filter((singlegoal) => \n        singlegoal.id !== goalId\n      );\n    });\n  };\n  return (\n    <View style={{ padding: 50 }}>\n      <Button title=\"Add New Title\" onPress={()=>{setisAddMode(true)}}/>\n      <GoalInput handlesubmit={handlesubmit} />\n      <FlatList\n        keyExtractor={(item, index) => item.id}\n        data={goallist}\n        renderItem={(itemdata) => (\n          <GoalList\n            id={itemdata.item.id}\n            ondelete={(id) => {\n              removehandler(id);\n            }}\n            title={itemdata.item.value}\n          />\n        )}\n      />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}